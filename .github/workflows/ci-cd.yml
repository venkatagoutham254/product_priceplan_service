name: CI / CD

on:
  push:
    branches: [ "main" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout source code
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Set up JDK for Maven build
      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      # 3. Build project & package the jar
      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      # 4. Copy JAR to EC2
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "target/*.jar"
          target: "/home/ubuntu/productrateplanservice/app.jar"

      # 5. SSH into EC2 and restart Docker container
      - name: Restart app container on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/productrateplanservice
            docker compose down
            docker compose up --build -d

      # 6. Wait until EC2 API is reachable
      - name: Wait until EC2 API is reachable
        run: |
          echo "Waiting for service to respond on http://${{ secrets.EC2_HOST }}:8080/api/products â€¦"
          for i in {1..30}; do
            if curl -fs http://${{ secrets.EC2_HOST }}:8080/api/products > /dev/null 2>&1; then
              echo "Service is up!" && exit 0
            fi
            sleep 5
          done
          echo "Service did not become healthy in time." && exit 1
