package aforo.productrateplanservie.rate_plan_subscription_rate;

import aforo.productrateplanservie.rate_plan.RatePlan;
import aforo.productrateplanservie.rate_plan.RatePlanRepository;
import aforo.productrateplanservie.rate_plan_subscription_rate_details.CreateRatePlanSubscriptionRateDetailsRequest;
import aforo.productrateplanservie.rate_plan_subscription_rate_details.RatePlanSubscriptionRateDetails;
import aforo.productrateplanservie.rate_plan_subscription_rate_details.RatePlanSubscriptionRateDetailsDTO;
import org.mapstruct.*;

import java.util.Set;
import java.util.stream.Collectors;

@Mapper(
        componentModel = MappingConstants.ComponentModel.SPRING,
        unmappedTargetPolicy = ReportingPolicy.IGNORE
)
public interface RatePlanSubscriptionRateMapper {

    // Map from entity to DTO, including rate plan subscription details
    @Mapping(target = "ratePlanSubscriptionRateDetailsDTO", source = "ratePlanSubscriptionRateDetails")
    RatePlanSubscriptionRateDTO updateRatePlanSubscriptionRateDTO(
            RatePlanSubscriptionRate ratePlanSubscriptionRate,
            @MappingTarget RatePlanSubscriptionRateDTO ratePlanSubscriptionRateDTO);

    @AfterMapping
    default void afterUpdateRatePlanSubscriptionRateDTO(
            RatePlanSubscriptionRate ratePlanSubscriptionRate,
            @MappingTarget RatePlanSubscriptionRateDTO ratePlanSubscriptionRateDTO) {
        ratePlanSubscriptionRateDTO.setRatePlanId(
                ratePlanSubscriptionRate.getRatePlan() == null ? null : ratePlanSubscriptionRate.getRatePlan().getRatePlanId()
        );
    }

    @Mapping(target = "ratePlanSubscriptionRateId", ignore = true)
    @Mapping(target = "ratePlan", ignore = true)
    void updateRatePlanSubscriptionRate(
            RatePlanSubscriptionRateDTO ratePlanSubscriptionRateDTO,
            @MappingTarget RatePlanSubscriptionRate ratePlanSubscriptionRate,
            @Context RatePlanRepository ratePlanRepository);

    // Maps from DTO to entity, ignoring the ID (auto-generated by the database)
    @Mapping(target = "id", ignore = true)
    RatePlanSubscriptionRateDetails mapToRatePlanSubscriptionRateDetails(RatePlanSubscriptionRateDetailsDTO detailsDTO);

    // Maps from entity to DTO, including the ID
    RatePlanSubscriptionRateDetailsDTO mapToRatePlanSubscriptionRateDetailsDTO(RatePlanSubscriptionRateDetails details);

    // Map from Create DTO to RatePlanSubscriptionRate, ignoring the ID
    @Mapping(target = "ratePlanSubscriptionRateId", ignore = true)
    @Mapping(target = "ratePlan", ignore = true) // Set manually in the service
    @Mapping(target = "ratePlanSubscriptionRateDetails", ignore = true) // Handle manually after mapping
    RatePlanSubscriptionRate toEntity(CreateRatePlanSubscriptionRateRequest dto);

    // Custom method to map nested RatePlanSubscriptionRateDetails and RatePlan
    default RatePlanSubscriptionRate mapToEntity(CreateRatePlanSubscriptionRateRequest dto, RatePlan ratePlan) {
        RatePlanSubscriptionRate ratePlanSubscriptionRate = toEntity(dto);
        ratePlanSubscriptionRate.setRatePlan(ratePlan);

        Set<RatePlanSubscriptionRateDetails> details = dto.getRatePlanSubscriptionRateDetails().stream()
                .map(this::mapDetailsRequestToEntity)
                .peek(detail -> detail.setRatePlanSubscriptionRate(ratePlanSubscriptionRate))
                .collect(Collectors.toSet());

        ratePlanSubscriptionRate.setRatePlanSubscriptionRateDetails(details);
        return ratePlanSubscriptionRate;
    }

    // Helper method to map details request to details entity
    RatePlanSubscriptionRateDetails mapDetailsRequestToEntity(CreateRatePlanSubscriptionRateDetailsRequest detailsRequest);


}
