spring:
  profiles:
    active: postgres # Set the active profile here: 'mysql' or 'postgres'
  main:
    web-application-type: servlet

  # Common configurations
  datasource:
    url: jdbc:mysql://localhost:3312/productrateplanservice
    username: root
    password: P4ssword!
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQLDialect
  liquibase:
    enabled: true
    change-log: classpath:/domain/changelog-master.yml
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB

uploads:
  dir: uploads
  public-base-url: /uploads


server:
  port: 8080

aforo:
  cors:
    allowed-origins: "http://productscreens.s3-website-ap-northeast-1.amazonaws.com,http://localhost:3000,http://13.115.248.133"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH"
    allowed-headers: "Authorization,Content-Type,X-Organization-Id"
    allow-credentials: true

customer:
  service:
    url: http://44.203.171.98:8082

billableMetrics:
  service:
    url: http://18.182.19.181:8081  

# Base URL for Product/RatePlan API (used by ratePlanServiceWebClient). Can be overridden via PRODUCT_SERVICE_URL env.
product:
  service:
    url: ${PRODUCT_SERVICE_URL:http://54.238.204.246:8080}

# Base URL for Subscription Service used for LIVE status checks. Must be set in deploy.
subscriptions:
  service:
    url: ${SUBSCRIPTIONS_SERVICE_URL:http://13.113.70.183:8084}

---
# PostgreSQL-specific configurations
spring:
  config:
    activate:
      on-profile: postgres
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://productrateplanservice.cx2owwes8uyb.us-east-1.rds.amazonaws.com:5432/productrateplanservice}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:P4ssword!}
    hikari:
      driver-class-name: org.postgresql.Driver
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:15}
      minimum-idle: ${HIKARI_MIN_IDLE:2}
      connection-timeout: ${HIKARI_CONNECTION_TIMEOUT_MS:10000}
      validation-timeout: ${HIKARI_VALIDATION_TIMEOUT_MS:5000}
      idle-timeout: ${HIKARI_IDLE_TIMEOUT_MS:600000}
      max-lifetime: ${HIKARI_MAX_LIFETIME_MS:1800000}
      keepalive-time: ${HIKARI_KEEPALIVE_TIME_MS:300000}
      connection-test-query: ${HIKARI_TEST_QUERY:SELECT 1}
      leak-detection-threshold: ${HIKARI_LEAK_DETECTION_MS:20000}
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
  liquibase:
    enabled: true
    change-log: classpath:/domain/changelog-master.yml
  jackson:
    date-format: dd MMM, yyyy HH:mm z
    time-zone: Asia/Kolkata

# Fast-fail HTTP client timeouts for postgres profile
clients:
  http:
    connectTimeoutMs: 1000
    responseTimeoutMs: 2000
    readTimeoutSec: 2
    writeTimeoutSec: 2
  billablemetrics:
    timeout:
      sec: 2
  subscriptions:
    timeout:
      sec: 2

springdoc:
  swagger-ui:
    display-operation-id: false
    display-request-duration: false
    default-models-expand-depth: 1
    default-model-expand-depth: 1
    doc-expansion: none
    operations-sorter: alpha
    tags-sorter: alpha
    display-operation-path: true
    custom-css-url: /swagger-ui/swagger-custom.css



aforo:
  jwt:
    issuer: aforo-productrateplans
    secret: ${JWT_SECRET:change-me-please-change-me-32-bytes-min}  # env var or fallback
    expiryMinutes: 120
  cors:
    # Comma-separated list; used by SecurityConfig.corsConfigurationSource()
    # Include your frontend origin(s). Add https variants if applicable.
    allowed-origins: "http://13.115.248.133,http://localhost:3000"
    allowed-methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
    allowed-headers: "Authorization,Content-Type,X-Organization-Id"
    allow-credentials: true


---
# MySQL-specific configurations
#spring:
#  config:
#    activate:
#      on-profile: mysql
#  datasource:
#    url: jdbc:mysql://localhost:3312/productrateplanservice
#    hikari:
#      driver-class-name: com.mysql.cj.jdbc.Driver
#    username: root
#    password: P4ssword!
#  jpa:
#    hibernate:
#      ddl-auto: update
#    database-platform: org.hibernate.dialect.MySQLDialect
#  liquibase:
#    enabled: true
#    change-log: classpath:/domain/changelog-master.yml
